@inherits BaseView

@{ var steps = IndexStep + "px " + ValueStep + "px "; }

<div class="canvas-container" space>

  <div class="canvas-scale canvas-scale-n" @onmousemove="e => OnScaleAction(e, 1)">

    @if (Cursor is not null)
    {
      <span class="canvas-label canvas-marker" style="left: @(Cursor?.Data.X)px"><b>@Cursor?.ValueX</b></span>
    }

    @foreach (var o in GetIndexEnumerator())
    {
      <span class="canvas-label" style="left: @(o.Item1)px"><b>@o.Item2</b></span>
    }

  </div>

  <div class="canvas-scale canvas-scale-s" @onmousemove="e => OnScaleAction(e, 1)">

    @if (Cursor is not null)
    {
      <span class="canvas-label canvas-marker" style="left: @(Cursor?.Data.X)px"><b>@Cursor?.ValueX</b></span>
    }

    @foreach (var o in GetIndexEnumerator())
    {
      <span class="canvas-label" style="left: @(o.Item1)px"><b>@o.Item2</b></span>
    }

  </div>

  <div class="canvas-scale canvas-scale-w" @onmousemove="e => OnScaleAction(e, -1)">

    @if (Cursor is not null)
    {
      <span class="canvas-label canvas-marker" style="top: @(Cursor?.Data.Y)px"><b>@Cursor?.ValueY</b></span>
    }

    @foreach (var o in GetValueEnumerator())
    {
      <span class="canvas-label" style="top: @(o.Item1)px"><b>@o.Item2</b></span>
    }

  </div>

  <div class="canvas-scale canvas-scale-e" @onmousemove="e => OnScaleAction(e, -1)">

    @if (Cursor is not null)
    {
      <span class="canvas-label canvas-marker" style="top: @(Cursor?.Data.Y)px"><b>@Cursor?.ValueY</b></span>
    }

    @foreach (var o in GetValueEnumerator())
    {
      <span class="canvas-label" style="top: @(o.Item1)px" alt="Canvas"><b>@o.Item2</b></span>
    }

  </div>

  <div class="canvas-view"
    @onwheel="OnWheelAction"
    @onmousewheel="OnWheelAction"
    @onmousemove="OnMouseMoveAction"
    @onmouseout="OnMouseLeaveAction"
    @onmousedown="OnMouseDownAction">

    @if (Cursor is not null)
    {
      <div class="canvas-cross" style="background-position: @(Cursor?.Data.X)px 100%, 100% @(Cursor?.Data.Y)px"></div>

      @if (Series?.Count > 0)
      {
        <div class="canvas-board">

          @foreach (var series in Series)
          {
            <div class="canvas-board-item"><b>@series.Key:</b> @ShowSeries(series.Value)</div>
          }

        </div>
      }
    }

    <img alt="Chart" @ref="Container" src="@(Route ?? "data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg'/>")" />
  </div>

</div>

<style type="text/css">

  .canvas-container[space] .canvas-view img {
    background-image: conic-gradient(from 90deg at 1px 1px,#0000 90deg, #DDD 0);
    background-size: @steps;
  }

</style>
