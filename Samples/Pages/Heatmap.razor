@page "/heatmap"

@using Canvas.Core
@using Canvas.Core.EngineSpace
@using Canvas.Core.ModelSpace
@using Canvas.Core.ServiceSpace
@using ScriptContainer

<div class="demo">
  <ScreenView @ref="ViewControl"></ScreenView>
</div>

<style type="text/css">
  .demo {
    display: flex;
    flex-grow: 1;
    height: 100%;
  }
</style>

@code
{
  public ScreenView ViewControl { get; set; }

  protected override async Task OnAfterRenderAsync(bool setup)
  {
    if (setup)
    {
      var min = 0;
      var max = 100;
      var generator = new Random();

      var points = Enumerable.Range(min, max).Select(i => new HeatmapItemModel
      {
        Items = Enumerable
          .Range(min, max)
          .Select(o => new ItemModel { X = i, Y = o, Z = o } as IItemModel)
          //.OrderBy(o => generator.Next())
          .ToList()

      } as IItemModel).ToList();

      //await ViewControl.Create<CanvasEngine>(dimensions => ViewControl.Composer = new Composer
      //{
      //  Name = "Demo",
      //  Items = points,
      //  ColorService = new ColorService { Min = min, Max = max }
      //});
    }

    await base.OnAfterRenderAsync(setup);
  }
}
